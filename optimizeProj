оптимизация логики кода
https://habrahabr.ru/company/infopulse/blog/262389/ - в низу советы

$digest вместо $apply($timeout в конце вызовет именно $rootScope.$apply())
ng-cloak
ленивая загрузка?

компиляцию шаблонов на сервере(пре-рендеринг) и выдачу всей страницы одним запросом (в планах второй версии)

кеширование шаблонов кроме index.html http://metanit.com/web/angular/4.2.php

обрезать ng-repeat до 50-100 елементов с подгрузкой на скролл(как быть с поиском??) - использовать material или др.либы

Можно использовать фильтры, но иногда они могут оказаться слишком дорогими, особенно, когда запускаются снова и снова. В этом случае можно создать вторую, внутреннюю модель. Сохранять в нее отфильтрованные данные из основной модели и уже вторую модель использовать в ng-repeat.

Для вставки шаблонов в DOM предпочтительнее использовать ng-include вместо innerHTML, т. к. она лучше оптимизирована.

Каждое приложение имеет общий код, использущийся во многих модулях.

$rootScope с 1 методом => лучьше чем внедрение ActiveUser в каждом контроллере

Двойное связывание(вместо усов data-ng-bind="::model.name" data-ng-repeat=«model in ::models»  одиночное связивание), $watch выражения и фильтры(поубирать избыточные фильтры) –  все это делает проход цикла дайджста более медленным, потому что каждая из етих хреней вешает свой $watch(намного быстрее ng-change).
Watcher-ы хранятся в scope и посмотреть их можно перебрав $scope.$$watchers.

Важная заметка: полная копия занимает НАМНОГО больше времени, чем полное сравнение
Несколько предложений как победить дорогостоящее полное копирование в вотчерах:

    стараться использовать сравнение по ссылке (но не полный перебор)
    повторно использовать один и тот же  вотчер для нескольких действий


  переписать factory => Создание и возврат по запросу цельного объекта поддерживает существующие привязки (binds) в контроллере обновлёнными, а ещё помогают избежать проблем с привязкой примитивов. https://habrahabr.ru/post/235873/

переделать имена всех директив с префиксом имени проекта

routeChangeStart - показать спиннер, routeChangeSuccess - убрать

делать некоторые действия в resolve ui-route, еще преред инициализацией контроллера

ng-class - на css, ng-mouseover и ng-mouseleave - на jquery

ng-show/ng-hide которые прячут или показывают нужные нам части страницы. Однако, связанные watcher-ы никуда не исчезают и участвуют в дайджесте, как и прежде. А вот использование ng-if полностью вырезает элементы из Dom-дерева вместе с соответствующими watcher-ами.Правда удаление элементов из Dom тоже не самая быстрая процедура, так что использовать ng-if стоит к тем частям разметки, которые будут скрываться/показываться не слишком часто

https://inostudio.com/ru/article/11-sovetov-po-uluchscheniu-proizvoditelnosti-angularjs.html
https://job-blog.bullgare.ru/2015/08/%D1%81%D0%BE%D0%B2%D0%B5%D1%82%D1%8B-%D0%BF%D0%BE-%D0%BF%D1%80%D0%BE%D0%B8%D0%B7%D0%B2%D0%BE%D0%B4%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE%D1%81%D1%82%D0%B8-angularjs/